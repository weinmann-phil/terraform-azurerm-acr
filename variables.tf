variable "allowed_cidrs" {
  type = set(string)
  default = null
  description = "(Optional) The IP ranges to allow for incoming traffic to the registry. The allowed CIRDs are only supported on resources with `Premium` SKU"

  validation {
    condition = alltrue([
      for a in var.allowed_cidrs : can(cidrnetmask(a))
    ])
    error_message = "All elements must be valid IPv4 CIDR addresses."
  }
}

variable "allowed_subnets" {
  type = set(string)
  default = null
  description = "(Optional) The subnets to allow for incoming traffic to the registry."
}

variable "data_endpoint_enabled" {
  type = bool
  default = false
  description = "(Optional) Option to enable dedicated data endpoints for the container registry. Option only supported with `Premium` SKU."
}

variable "enable_trust_policy" {
  type = bool
  default = false
  description = "(Optional) Boolean value indicating that the policy is enabled. This block is supported only in `Premium` SKU."
}

variable "enable_image_retention" {
  type = bool
  default = false
  description = "(Optional) Sets the retention policy block. This block is only supported with the `Premium` SKU."
}

variable "geo_redundant_locations" {
  type = set(any)
  default = []
  description = "(Optional) A set of obects with definitions of georeplication data"
}

variable "retention_period" {
  type = number
  default = 7
  description = "(Optional) The number of days to retain an untagged manifest after which it gets purged. Defaults to 7."
}

variable "resource_group_name" {
  type = string
  description = "(Required) The name of the resource group in which to create the Container Registry. Changing this forces a new resource to be created."

  validation {
    condition     = can(regex("^rg-", var.resource_group_name))
    error_message = "The resource group name must start with 'rg-'."
  }
}

variable "location" {
  type = string
  default = null
  description = "(Required) Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created."
}

variable "network_rule_bypass_option" {
  type = string
  default = "AzureServices"
  description = "(Optional) Allow Azure service to have access to the container registry. Possible values are `AzureServices` or `None`."

  validation {
    condition = contains(["AzureServices", "None"], var.network_rule_bypass_option)
    error_message = "Public network access option can be either `AzureServices` or `None`."
  }
}

variable "registry_name" {
  type = string
  default = null
  description = "(Optional) Specifies the name of the Container Registry. Only Alphanumeric characters allowed. Changing this forces a new resource to be created"
}

variable "sku" {
  type = string
  default = "Basic"
  description = "(Optional) The SKU name of the container registry. Possible values are `Basic`, `Standard`, and `Premium`"

  validation {
    condition = contains(["Basic", "Standard", "Premium"], var.sku)
    error_message = "The SKU tier must be either `Basic`, `Standard`, or `Premium`."
  }
}

variable "tracing_tags_enabled" {
  type = bool
  default = false
  description = "(Optional) Option to enable tracing tags generated by BdrigeCrew Yor."
  nullable = false
}

variable "tracing_tags_prefix" {
  type = string
  default = "avm_"
  description = "(Optional) Sets the default prefix for generated tracing tags."
  nullable = false
}

variable "prefix" {
  type = string
  default = ""
  description = "(Optional) The prefix for the resources created in the specified Azure Resource Group. Omitting this variable requires both `var.cluster_log_analytics_workspace_name` and `var.registry_name` have been set."
  nullable = false
}

variable "public_network_access_enabled" {
  type = bool
  default = true
  description = "(Optional) Option to allow public network access to container registry. Defaults to `true`"
}

variable "tags" {
  type = map(string)
  default = {}
  description = "(Optional) Any tags that should be present on the ACR resources"
}